-
    function Component(attributes, props) {
        const values = {}

        for (const key in props) {

            const propOptions = props[key];
            const { type, required } = propOptions;
            const attributeValue = attributes[key];

            if (attributeValue !== undefined) {
                if (type instanceof Array) {
                    if (type.find(type => typeof attributeValue === typeof type()) === undefined) {
                        console.error(`Свойство: "${key}" со значением`, attributeValue, `не соответствует определяемому типу`, type);
                    }
                } else {
                    if (typeof attributeValue !== typeof type()) {
                        console.error(`Свойство: "${key}" со значением`, attributeValue, `не соответствует определяемому типу`, type);
                    }
                }

                values[key] = attributeValue;
                delete attributes[key]
            } else {
                if (required) {
                    console.error(`Свойство: "${key}" должно быть заполненным`);
                } else {
                    values[key] = propOptions.default;
                }
            }
        }

        return values;
    }

    function setUkOptions(ukComponentOptions = Object) {
        let string = '';

        for (const key in ukComponentOptions) {
            if (ukComponentOptions[key] !== undefined) {
                string += ` ${key}: ${ukComponentOptions[key]};`;
            }
        }

        return string.trim();
    }
